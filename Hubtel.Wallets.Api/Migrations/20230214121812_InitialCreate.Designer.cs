// <auto-generated />
using System;
using Hubtel.Wallets.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hubtel.Wallets.Api.Migrations
{
    [DbContext(typeof(HubtelWalletDBContext))]
    [Migration("20230214121812_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hubtel.Wallets.Api.Models.AccountScheme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountScheme");
                });

            modelBuilder.Entity("Hubtel.Wallets.Api.Models.AccountType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("Hubtel.Wallets.Api.Models.Wallet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int?>("AccountSchemeID")
                        .HasColumnType("int");

                    b.Property<int?>("AccountTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.HasIndex("AccountSchemeID");

                    b.HasIndex("AccountTypeID");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("Hubtel.Wallets.Api.Models.WalletLimit", b =>
                {
                    b.Property<int>("WalletCountLimit")
                        .HasColumnType("int");

                    b.ToTable("WalletLimit");
                });

            modelBuilder.Entity("Hubtel.Wallets.Api.Models.Wallet", b =>
                {
                    b.HasOne("Hubtel.Wallets.Api.Models.AccountScheme", "AccountScheme")
                        .WithMany()
                        .HasForeignKey("AccountSchemeID");

                    b.HasOne("Hubtel.Wallets.Api.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
